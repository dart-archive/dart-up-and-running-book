<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="ch01">
  <?dbhtml stop-chunking?>

  <title>Быстрый старт</title>

  <para>Добро пожаловать в Dart, где с open-source платформой для разработки структурированных HTML5 веб-приложений, батарейки идут в комплекте. В этой главе рассказывается почему компания Google создала Dart, что крутого в Dart, и как написать и запустить свое первое Dart приложение.</para>

  <para>Dart обеспечивает не только новый язык, но и библиотеки, а так же редактор кода, и виртуальную машину (VM), и еще браузер который может запускать код Dart приложений нативно, и компилятор Dart кода в JavaScript для тех браузеров которые не поддерживают Dart. Dart стремится быть более продуктивным средством в разработке высокопроизводительных, современных приложений, которые требуют пользователи.</para>

  <sect1 id="ch01-why-dart">
    <title>Почему Google создал Dart</title>

    <para>Google сильно старается помочь в создании идеального интернет-пространства. Мы пишем много веб-приложений, многие из них довольно сложные - такие как Gmail, Календарь Google, Google +, и многое другое. Мы хотим что бы веб-приложения загружались быстро, работали плавно и вызывали необычные и забавные эмоции у пользователей. Мы хотим, чтобы разработчики с любым багажом знаний, имели возможность построить приложение с которым будет удобно взаимодействовать с помощью браузера.</para>

    <para>В качестве примера приверженности компании Google к сети, рассмотрим браузер Google Chrome. Google создал его для стимулирования конкуренции в то время, когда веб-платформа, казалось, находится в состоянии стагнации. Это сработало. <xref
    linkend="BrowserChart" /> показывает, с появлением Chrome в 2008 году, скорость браузеров возросла чрезвычайно.</para>

    <note>
      <para>За большую часть скорости бразуера Chrome отвечает механизм JavaScript известный как <firstterm>V8</firstterm>. Многие инженеры V8 теперь работают над Dart.</para>
    </note>

    <figure float="0" id="BrowserChart">
      <title>Скорость браузеров (V8 набор тестов v7; Чем выше показатели, тем лучше)</title>

      <mediaobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/daur_0101.png" format="PNG" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>Количество новых возможностей браузеров увеличилось, вместе с новыми API: WebGL, FileSystem, Web workers, и WebSockets. Появилась возможность автоматического обновления, обеспечивая быстрое внедрение новых возможностей и исправлений. Мобильные устройства, такие как телефоны и планшеты поддерживают много новых возможностей HTML5 уже сейчас.</para>

    <para>Несмотря на эти улучшения, в плане упрощения работы разработчикам ситуация не улучшилась на столько, на сколько хотелось бы. Мы верим в то, что разработка крупных и сложных веб-приложений должна быть проще. Время для появления продуктивных инструментов на других платформах слишком затянулось, и они все еще не соответствуют ожиданиям. Вы не должны досконально изучать веб-программирование, что бы начать создавать сложные современные веб-приложения. И хотя системы JavaScript становятся все быстрее, разработка веб-приложений на них ведется медленнее.</para>

    <para>Мы считаем Dart поможет в двух основных вещях:</para>

    <itemizedlist>
      <listitem>
        <para><emphasis>Более высокая производительность:</emphasis> Как VM инженеры, разработчики Dart знают как создать производительный язык. Структурированный язык легче оптимизировать, а новая VM обеспечивает более быстрый запуск.</para>
      </listitem>

      <listitem>
        <para><emphasis>Более высокая продуктивность:</emphasis> Поддержка библиотек и пакетов (packages) помогает взаимодействивать с другими разработчиками и легко повторно использовать код в других проектах. Типы помогут сделать API яснее и проще. Инструменты окажут помощь при рефакторинге кода, при перемещении по нему и его отладке. </para>
      </listitem>
    </itemizedlist>
  </sect1>

  <sect1 id="ch01-quick-look">
    <title>Не большой обзор языка Dart</title>

    <para>Трудно говорить о языке, не видя его. Вот пример небольшой программы на Dart:</para>

    <programlisting format="linespecific" role="keep-together"><remark>lang-dart
</remark>import 'dart:math';

class Point {
  num x, y;
  Point(this.x, this.y);
  num distanceTo(Point other) {
    var dx = x - other.x;
    var dy = y - other.y;
    return sqrt(dx * dx + dy * dy);
  }
}

main() {
  var p = new Point(2, 3);
  var q = new Point(3, 4);
  print('distance from p to q = ${p.distanceTo(q)}');
}</programlisting>

    <para>Конечно, основное предназначение Dart’а состоит в разработке современных веб-приложений.
    Простая работа с браузером:</para>

    <programlisting format="linespecific"><remark>lang-dart
</remark>import 'dart:html';

main() {
  var button = new ButtonElement();
  button..id = 'confirm'
        ..text = 'Click to Confirm'
        ..classes.add('important')
        ..onClick.listen((e) =&gt; window.alert('Confirmed!'));
  querySelector('#registration').children.add(button);
}</programlisting>

    <para>Вы узнаете подробнее о языке Dart и его библиотеках в <xref
    linkend="ch02" xrefstyle="select: labelnumber" /> и <xref linkend="ch03"
    xrefstyle="select: labelnumber" /> соответственно.</para>
  </sect1>

  <sect1 id="ch01-whats-cool">
    <title>Что еще крутого на счет Dart</title>

    <para>Dart выглядит знакомо, но пусть это Вас не обманывает. У Dart много новых возможностей которые помогут Вам создавать понастоящему удивительные веб-приложения нового покаления.</para>

    <para><emphasis>Dart прост в изучении.</emphasis> Многие разработчики имеющие опыт, способны освоить Dart очень быстро. Dart это объектно-ориентированный язык с классовым наследованием, с одиночным наследованием, лексической областью видимости, функциями верхнего уровня, и знакомым синтаксисом.</para>

    <para><emphasis>Dart компилируется в JavaScript.</emphasis> Dart изначально был спроектирован с учетом возможности его компиляции в JavaScript, благодаря этому, приложения написанные на языке Dart могут работать эффективно со всеми платформами в сети. Каждая функция написанная на языке Dart переводится на логический и производительный код JavaScript. Dart проводит черту, и не поддерживает древние браузеры.</para>

    <para><emphasis>Dart готов работать как на стороне сервера, так и на клиенте.</emphasis>Виртуальная машина Dart может быть интегрированна в браузер, но она так же может запускать код и из командной строки. С помощью встроенных библиотек для работы с файлами, директориями, сокетами и даже веб-серверами, Вы можете использовать Dart на всех этапах разработки приложений, от начала и до конца.</para>

    <para><emphasis>Dart поставляется вместе с простым редактором кода.</emphasis> Вы можете использовать Dart Editor для написания, запуска, и отладки Dart приложений. Редактор поможет вычислить потенциальные ошибки, провести отладку, как для консольных приложений так и для приложений написанных для браузера, и даже провести рефакторинг кода, если это будет нужно. Использование редактора Dart не входит в обязательные условия при написании кода, это просто инструмент, который может помочь писать код лучше и быстрее.</para>

    <para><emphasis>Dart поддерживает типы, но не требует их.</emphasis>
Вы можете не использовать типы, если Вам нужно сделать что-то быстро, или Вы еще не приняли решения по структуре приложения, или Вы просто хотите выразить то, чего не выразить системой типов. Dart не станет требовать от вас определения типов, Вы сможете сделать это когда ваше приложение обретет, наконец, понятную структуру. Статичные аннотации типов, которые используются в качестве документации способны четко обозначать Ваши намерения. Используя типы нет необходимости писать большие коментарии и подробно документировать код.</para>

    <para><emphasis>Dart маштабируется от небольших скриптов до больших сложных приложений.</emphasis>Веб разработка это очень итерационный процесс. Начиная с написания простых функций в качестве эксперемента, просто перезагружая компилятор для просмотра результата, Вы можете развивать свою идею и добавлять больше кода и структуры вашему приложению. Благодаря поддержки Dart функций верхнего уровня, необязательного типизирования, классов и библиотек, Ваша программа может расти с течением времени. Редактор Dart поможет реогранизовать код по мере необходимости.</para>

    <para><emphasis>Dart имеет множество встроенных библиотек.</emphasis>
Основаня библиотека (ядро) поддерживает встроенные типы и другие фундаментальные функции, такие как коллекции, даты и регулярные выражения.
Веб-приложения могут использовать HTML библиотеки - для работы с DOM, но оптимизированные для Dart. Консольные приложения могут использовать библиотеки ввода / вывода ( I/O ) для работы с фалами, каталогами, сокетами и серверами. Остальные библиотеки включают в себя URI, UTF, Crypto, Math, и Unit тестирование.</para>

    <para><emphasis>Dart поддерживает безопасный, простой параллелизм вместе с изоляторами.</emphasis> Традиционное разделение памяти трудно отлаживать и может привести к тупиковым ситуациям. В Dart, изоляторы вдохновленные Erlang обеспечивают более легкую для понимания модель работы. Процесс создания нового изолятора прост и быстр, и позволяет частям Вашего кода выполняться в отдельном процессе.</para>

    <para><emphasis>Dart поддерживат совместное использование кода.</emphasis> Обычно, рабочие процессы веб-разработки не распологают средствами для интеграций сторонних библиотек из произвольных источников. С помощью Dart package manager (pub) и языковых возможностей, таких как библиотеки, Вы можете легко найти, установить и интегрировать подготовленные другми разработчиками библиотеки.</para>

    <para><emphasis>Dart имеет открытый исходный код.</emphasis> Dart создан для интернета, и доступен под лицензией схожей с BSD (BSD-style license). Вы можете
    <ulink url="http://dart.googlecode.com">отслеживать проблемы и просматривать исходный код</ulink>. Может быть, вы представить следующий патч?</para>
  </sect1>

  <sect1 id="ch01-editor">
    <title>Up and Running</title>

    <para>Теперь, когда вы знаете немного о Dart, будьте готовы к коду! Эта инструкция поможет Вам установить редактор Dart Editor. При загрузке Dart, вы получаете не только Dart Editor, но так же и инструменты компиляции Dart-to-JavaScript и особую версию Chromium (именуемую <emphasis>Dartium</emphasis>) с интегрированной Dart VM.</para>

    <note>
      <para>Если вы столкнетесь с проблемами установки и использования Dart Editor см.
      <ulink
      url="http://www.dartlang.org/tools/editor/troubleshoot.html">Troubleshooting
      Dart Editor.</ulink></para>
    </note>

    <sect2 id="ch01-editor-download">
      <title>Шаг 1: Скачать и установить программное обеспечение</title>

      <para>На этом этапе, Вы установите Dart Editor и, при необходимости, среду выполнения Java. (Чтобы избежать необходимости изменять окружение PATH вы можете установить JRE в том же каталоге с Dart, во вложенную папку с именем <code>jre</code>.)</para>

      <orderedlist continuation="restarts" inheritnum="ignore">
        <listitem>
          <para><ulink url="http://dartlang.org/#get-started">Загрузить
          Dart</ulink>.</para>
        </listitem>

        <listitem>
          <para>Нужно разархивировать загруженный файл. Полученный каталог, который мы назовем <emphasis>установочный каталог Dart</emphasis>, содержит исполняемый файл <code>DartEditor</code> и еще несколько директорий.</para>
        </listitem>

        <listitem>
          <para>Если у вам еще нет Java runtime, самое время скачать и установить эту вещь. Dart Editor необходима Java версии 6 или выше.</para>
        </listitem>
      </orderedlist>
    </sect2>

    <sect2 id="ch01-editor-launch">
      <title>Шаг 2: Запуск редактора</title>

      <para>Перейдите в установочный каталог Dart, и дважды кликните
      <emphasis role="bold">DartEditor</emphasis><phrase
      role="keep-together"> <inlinemediaobject>
          <imageobject>
            <imagedata fileref="figs/web/Dart_Logo_21.png" format="PNG"
                       width="0.12in" />
          </imageobject>
        </inlinemediaobject>.</phrase></para>

      <para>Вы увидите окно редактора Dart похожее на <xref linkend="DartEditor-initial" />.</para>

      <figure float="0" id="DartEditor-initial">
        <title>Окно приветствия Dart Editor</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata fileref="figs/web/daur_0102.png" format="PNG"
                       scale="30%" />
          </imageobject>
        </mediaobject>
      </figure>
    </sect2>

    <sect2 id="ch01-editor-sample">
      <title>Шаг 3: Открыть и запустить демонстрационные примеры</title>

      <para>Dart Editor поставляется с несколькими демонстрационными примерами. На этом этапе, Вы поймете как открывать веб-приложения и запускать их в Dartium.</para>

      <orderedlist continuation="restarts" inheritnum="ignore">
        <listitem>
          <para>Выбираем <emphasis role="bold">Welcome</emphasis> закладку. или выбираем <emphasis role="bold">Welcome Page</emphasis> из
          <emphasis role="bold">Tools</emphasis> меню.</para>
        </listitem>

        <listitem>
          <para>На вкладке Welcome, нажмите на изображение с надписью <emphasis
          role="bold">Sunflower</emphasis>. Dart Editor создаст копию
          <ulink
          url="http://code.google.com/p/dart/source/browse/trunk/dart/samples/sunflower/">Sunflower
          app’s directory,</ulink> и окно редактора отобразит содержимое проекта <emphasis>web/sunflower.dart</emphasis>.</para>
        </listitem>

        <listitem>
          <para>Выберите Run button <inlinemediaobject>
              <imageobject>
                <imagedata fileref="figs/web/run.png" width="0.12in" />
              </imageobject>
            </inlinemediaobject>. Dart Editor запустит Dartium, который отобразит
          <phrase
          role="keep-together"><emphasis>sunflower.html</emphasis></phrase>.</para>

          <warning>
            <para>Dartium используется в основном для просмотра результата выполнения кода, на данный момент он имеет проблемы с безопасностью и стабильностью.<emphasis> Не используйте Dartium как основной браузер!</emphasis></para>
          </warning>
        </listitem>

        <listitem>
          <para>Переместите ползунок для изменения индикации, как показано на
          <xref linkend="sunflower" />.</para>

          <figure float="none" id="sunflower">
            <title>Пример работы Sunflower в Dartium</title>

            <mediaobject>
              <imageobject role="web">
                <imagedata fileref="figs/web/daur_0105.png" format="PNG"
                           scale="30%" />
              </imageobject>
            </mediaobject>
          </figure>
        </listitem>
      </orderedlist>
    </sect2>

    <sect2 id="ch01-editor-code">
      <title>Шаг 4: Создание и запуск приложения</title>

      <para>Создавать консольные приложения так же просто как и приложения для веб. Этот шаг опишет процесс создания и запуска консольных приложений.</para>

      <orderedlist continuation="restarts" inheritnum="ignore">
        <listitem>
          <para>Выберите New Application <inlinemediaobject>
              <imageobject>
                <imagedata fileref="figs/web/newapp.png" width="0.12in" />
              </imageobject>
            </inlinemediaobject> (в левом верхнем углу Dart Editor).
          Также можно выбрать <emphasis role="bold">File &gt; New
          Application</emphasis> из меню редактора, или выбрать
          <emphasis role="bold">Create an Application…</emphasis> кнопку в Welcome page. Появится диалоговое (см <xref
          linkend="DartEditor-newapp" />).</para>
        </listitem>

        <listitem>
          <para>Введите имя для Вашего приложения, например,
          <code>hello_world</code>. Если вам не нравится каталог по умолчанию, введите новое местоположение или выберите из меню.</para>
        </listitem>

        <listitem>
          <para>Убедитесь <emphasis role="bold">Generate sample
          content</emphasis> и <emphasis role="bold">Command-line
          application</emphasis> выбранны. Затем выберите <emphasis
          role="bold">Finish</emphasis> для создания необходимых файлов для этого приложения.</para>

          <figure float="0" id="DartEditor-newapp">
            <title>Создание веб или консольного приложения в Dart Editor</title>

            <mediaobject>
              <imageobject role="web">
                <imagedata fileref="figs/web/daur_0103.png" format="PNG"
                           scale="30%" />
              </imageobject>
            </mediaobject>
          </figure>

          <para>По умолчанию отобразятся область редактирования кода (Edit view)и область навигации (Files view). Ваш Dart Editor должен выглядеть примерно как <xref linkend="DartEditor-helloworld" />.</para>

          <figure float="0" id="DartEditor-helloworld">
            <title>Dart Editor отображения файлов нового приложения</title>

            <mediaobject>
              <imageobject role="web">
                <imagedata fileref="figs/web/daur_0104.png" format="PNG"
                           scale="30%" />
              </imageobject>
            </mediaobject>
          </figure>
        </listitem>

        <listitem>
          <para>Выберите Run button <inlinemediaobject>
              <imageobject>
                <imagedata fileref="figs/web/run.png" width="0.12in" />
              </imageobject>
            </inlinemediaobject> для запуска Вашего приложения.</para>

          <para>Для консольных приложений, вывод
          <literal>print()</literal> появляется в правом нижнем углу, в новой вкладке рядом с вкладкой ошибок.</para>
        </listitem>
      </orderedlist>
    </sect2>

    <sect2 id="ch01-editor-next">
      <title>Что дальше?</title>

      <para>Теперь, когда вы знаете основы, вы можете узнать больше о Dart Editor и помочь <phrase role="keep-together">улучшить его</phrase>.</para>

      <sect3 id="ch01-editor-codelab">
        <title>Следите за примерами разработки</title>

        <para>Для того что бы найти остальные пошаговые инструкции для написания приложения можно воспользоваться ссылкой: <ulink
        url="https://www.dartlang.org/codelabs/">dartlang.org/codelabs</ulink>. Первый пример, <ulink url="https://www.dartlang.org/codelabs/darrrt/">Try
        Dart,</ulink> руководство ознакомит Вас с разработкой и запуском генератора пиратских имен.</para>
      </sect3>

      <sect3 id="ch01-editor-tutorial">
        <title>Изучайте уроки</title>

        <para><ulink url="http://www.dartlang.org/docs/tutorials/">The Dart
        Tutorials</ulink> научит вас, как создавать веб-приложения с помощью
         Языка Dart, инструментов и API.</para>
      </sect3>

      <sect3 id="ch01-editor-learn-more">
        <title>Набирайтесь опыта</title>

        <para>Посетите <ulink url="http://www.dartlang.org/editor/">домашнюю страницу Dart
        Editor</ulink> для помощи в использовании расширенного рабора функций редактора Dart</para>
      </sect3>

      <sect3 id="ch01-editor-feedback">
        <title>Оставляйте отзывы</title>

        <para>Жмите <emphasis role="bold">SEND FEEDBACK</emphasis> кнопку
        (в правом верхнем углу окна редактора Dart) всегда когда вы заметите проблему или появляются идею и предложения по улучшению редактора. Мы откроем новый запрос для Вас, если это будет необходимо, не раскрывая вашу конфиденциальную или личную информацию.
        </para>
      </sect3>
    </sect2>
  </sect1>
</chapter>
